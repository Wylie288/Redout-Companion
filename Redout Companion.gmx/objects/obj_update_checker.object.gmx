<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !file_exists("wrs.ini")
        create_wrs()
wr_times()
room_goto_next()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if http = 2
{
    if os_is_network_connected()
    {
        evid = ds_map_find_value(async_load, "id")
        status = ds_map_find_value(async_load, "status")
        if status = 1
        {
            show_debug_message("Version Downloading")
        }
        else if (status = 0) &amp;&amp; (evid = async_ini)
        {
            show_debug_message("Version SYNC")
            switch (evid)
            {
                case async_ini:
                    vresult = ds_map_find_value(async_load, "result");
                    vfile = file_text_open_write("version.ini")
                    file_text_write_string(vfile, vresult)
                    file_text_close(vfile)
                    break;
            }
            
            ini_open("version.ini")
                num = ini_read_real("version","num", version)
            ini_close()
            
            if num &gt; version
            {
                show_question("Update Available! Would you like to download it?")
                {
                    if os_type = os_windows
                        url_open("https://www.dropbox.com/s/2g8ka5einivo4t2/Redout%20Companion.exe?dl=0")
                    if os_type = os_android
                        url_open("https://play.google.com/store/apps/details?id=com.companyname.Redout_Companion")
                }
            }
        }
        else
            show_debug_message("Version FAIL")
        http = 3
        room_goto_next()
    }
}

if http = 1
{
    if os_is_network_connected()
    {
        evid = ds_map_find_value(async_load, "id")
        status = ds_map_find_value(async_load, "status")
        if status = 1
        {
            show_debug_message("Records Downloading")
        }
        else if (status = 0) &amp;&amp; (evid = async_ini)
        {
            show_debug_message("Records SYNC")
            switch (evid)
            {
                case async_ini:
                    rresult = ds_map_find_value(async_load, "result");
                    rfile = file_text_open_write("wrs.ini")
                    file_text_write_string(rfile, rresult)
                    file_text_close(rfile)
                    break;
            }
        }
        else
            show_debug_message("Records FAIL")
        wr_times()
        http = 2
        async_ini = http_get("https://www.dropbox.com/s/qo9z27m7kvve9f5/version.ini?dl=1")
    }
    else
    {
        if !file_exists("wrs.ini")
            create_wrs()
        wr_times()
        room_goto_next()
    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Boss/Declare
version = 1066
global.tracks = 60

if file_exists("boss")
{
ini_open("boss")
    if ini_read_real("vertex","vertex",0) = 0
    {
        for (c=1; c&lt;5; c+=1)
            for (i=6; i&gt;-1; i-=1)
            {
                old_time = ini_read_string(string(c),string(35+i),"0")
                ini_write_string(string(c),string(global.tracks+i),old_time)
                ini_write_string(string(c),string(35+i),"0")
            }
        ini_write_real("vertex","vertex",1)
    }
ini_close()
}

if file_exists("wrs.ini")
{
    ini_open("wrs.ini")
    show_debug_message(string(ini_read_real("wrs","40",0)))
    if ini_read_real("wrs","40",0) = 0
        create_wrs()
    ini_close()
}
else
    create_wrs()
http = 1
async_ini = http_get("https://www.dropbox.com/s/68gk8ab4h7d489g/wrs.ini?dl=1")
alarm[0] = 80
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Fixes
ini_open("Update")
if ini_read_real("fix","dlc_plat",0) = 0
{
    ini_write_real("fix","dlc_plat",1)
    ini_close()
    ini_open("Plats")
        if ini_read_real("2","Training Run \#1:",0) = 0
            ini_write_real("2","Training Run \#1:",2)
        if ini_read_real("2","Training Run \#3:",0) = 0
            ini_write_real("2","Training Run \#3:",2)
        if ini_read_real("2","Training Run \#4:",0) = 0
            ini_write_real("2","Training Run \#4:",2)
        if ini_read_real("2","Training Run \#7:",0) = 0
            ini_write_real("2","Training Run \#7:",2)
        if ini_read_real("3","Tranquility Run:",0) = 0
            ini_write_real("3","Tranquility Run:",2)
        if ini_read_real("3","Floating Death Trial:",0) = 0
            ini_write_real("3","Floating Death Trial:",2)
        if ini_read_real("3","Race For Your Life:",0) = 0
            ini_write_real("3","Race For Your Life:",2)
        if ini_read_real("4","Opportunity Trial:",0) = 0
            ini_write_real("4","Opportunity Trial:",2)
        if ini_read_real("4","Blind Corkscrew Challenge:",0) = 0
            ini_write_real("4","Blind Corkscrew Challenge:",2)
        if ini_read_real("4","God of War:",0) = 0
            ini_write_real("4","God of War:",2)
        if ini_read_real("4","Up Up and Away:",0) = 0
            ini_write_real("4","Up Up and Away:",2)
        if ini_read_real("4","Orbital Speed:",0) = 0
            ini_write_real("4","Orbital Speed:",2)
        if ini_read_real("4","Opportunity Bonebreaker:",0) = 0
            ini_write_real("4","Opportunity Bonebreaker:",2)
        if ini_read_real("4","Mariner Ironman:",0) = 0
            ini_write_real("4","Mariner Ironman:",2)
        if ini_read_real("4","Spirit Trial:",0) = 0
            ini_write_real("4","Spirit Trial:",2)
        if ini_read_real("4","Training Run \#10:",0) = 0
            ini_write_real("4","Training Run \#10:",2)
        if ini_read_real("4","Training Run \#11:",0) = 0
            ini_write_real("4","Training Run \#11:",2)
        if ini_read_real("4","Neptune Chrono:",0) = 0
            ini_write_real("4","Neptune Chrono:",2)
        if ini_read_real("4","Exobiology Tour:",0) = 0
            ini_write_real("4","Exobiology Tour:",2)
        if ini_read_real("4","The Red Trial:",0) = 0
            ini_write_real("4","The Red Trial:",2)
        if ini_read_real("4","Curiosity Trial:",0) = 0
            ini_write_real("4","Curiosity Trial:",2)
        if ini_read_real("4","Mariner Speed:",0) = 0
            ini_write_real("4","Mariner Speed:",2)
        if ini_read_real("4","Absolute Zero:",0) = 0
            ini_write_real("4","Absolute Zero:",2)
        if ini_read_real("4","Copper Waterfall Challenge:",0) = 0
            ini_write_real("4","Copper Waterfall Challenge:",2)
        if ini_read_real("4","Schiaparelli Trial:",0) = 0
            ini_write_real("4","Schiaparelli Trial:",2)
        if ini_read_real("4","Spacewalker:",0) = 0
            ini_write_real("4","Spacewalker:",2)
        if ini_read_real("4","Galaxy Express:",0) = 0
            ini_write_real("4","Galaxy Express:",2)
        if ini_read_real("4","Debris Trophy:",0) = 0
            ini_write_real("4","Debris Trophy:",2)
        if ini_read_real("4","Blood Boil:",0) = 0
            ini_write_real("4","Blood Boil:",2)
        if ini_read_real("4","Lunar Departure:",0) = 0
            ini_write_real("4","Lunar Departure:",2)
        if ini_read_real("4","The Kessel Run:",0) = 0
            ini_write_real("4","The Kessel Run:",2)
        if ini_read_real("4","Space Chrono:",0) = 0
            ini_write_real("4","Space Chrono:",2)
    ini_close()
}
else
ini_close()

ini_open("Update")
if ini_read_real("fix","bte",0) = 0
{
    ini_write_real("fix","bte",1)
    create_wrs()
}
ini_close()


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
